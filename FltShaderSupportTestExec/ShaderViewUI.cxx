// generated by Fast Light User Interface Designer (fluid) version 1.0300
#include "stdafx.h"
#include "ShaderViewUI.h"

void ShaderViewUI::cb_shaderViewWindow_i(Fl_Double_Window*, void*) {
	geoTestShaderWindow->cleanup();
	exit(0);
}
void ShaderViewUI::cb_shaderViewWindow(Fl_Double_Window* o, void* v) {
  ((ShaderViewUI*)(o->user_data()))->cb_shaderViewWindow_i(o,v);
}

ShaderViewUI::ShaderViewUI() {
  { shaderViewWindow = new Fl_Double_Window(600, 600, "Shader View UI");
    shaderViewWindow->callback((Fl_Callback*)cb_shaderViewWindow, (void*)(this));
    { geoTestShaderWindow = new GeoTestShaderWindow(25, 25, 550, 550, "Shader View");
      geoTestShaderWindow->box(FL_NO_BOX);
      geoTestShaderWindow->color(FL_BACKGROUND_COLOR);
      geoTestShaderWindow->selection_color(FL_BACKGROUND_COLOR);
      geoTestShaderWindow->labeltype(FL_NORMAL_LABEL);
      geoTestShaderWindow->labelfont(0);
      geoTestShaderWindow->labelsize(14);
      geoTestShaderWindow->labelcolor(FL_FOREGROUND_COLOR);
      geoTestShaderWindow->align(Fl_Align(FL_ALIGN_BOTTOM));
      geoTestShaderWindow->when(FL_WHEN_RELEASE);
      Fl_Group::current()->resizable(geoTestShaderWindow);
    } // GeoTestShaderWindow* geoTestShaderWindow
    shaderViewWindow->end();
  } // Fl_Double_Window* shaderViewWindow
}

void ShaderViewUI::show(int argc, char **argv) {
  shaderViewWindow->show(argc, argv);
}
